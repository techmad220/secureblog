name: Deploy CDN-Only (No Origin)
on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  deploy-cloudflare-pages:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@1e31de5234b664ca3f0ed09e5ce0d6de0c5d0fc1 # actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Build static site
        run: |
          go mod download -x
          go build -trimpath -ldflags="-w -s" -mod=readonly ./cmd
          make build

      - name: Generate integrity manifest
        run: |
          find build -type f -exec sha256sum {} \; | \
            sed 's|build/||' | \
            jq -Rs 'split("\n") | map(select(. != "") | split("  ") | {(.[1]): .[0]}) | add' \
            > build/manifest.json

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: secureblog
          directory: build
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Verify deployment (no origin needed)
        run: |
          sleep 30
          curl -sf https://secureblog.pages.dev || exit 1
          echo "✅ Site deployed to CDN-only (no origin server)"

  deploy-r2-storage:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@1e31de5234b664ca3f0ed09e5ce0d6de0c5d0fc1 # actions/checkout@v4
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # actions/setup-go@v5
        with:
          go-version: "1.22.x"

      - name: Build and prepare
        run: |
          make build
          tar -czf site.tar.gz -C build .

      - name: Deploy to R2 (object storage)
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          # Install wrangler
          npm install -g wrangler
          
          # Upload to R2 bucket (no public origin)
          wrangler r2 object put secureblog-static/site.tar.gz \
            --file=site.tar.gz \
            --content-type="application/gzip"
          
          # Sync all files
          for file in build/*; do
            wrangler r2 object put "secureblog-static/${file#build/}" \
              --file="$file" \
              --content-type="$(file -b --mime-type "$file")"
          done
          
          echo "✅ Deployed to R2 object storage (CDN-only)"