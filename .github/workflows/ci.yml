name: CI (secure)
on:
  push:
    branches: [ "**" ]
  pull_request:

permissions:
  contents: read
  security-events: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"  # current stable
          check-latest: true

      - name: Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Verify formatting
        run: |
          set -euo pipefail
          fmtout=$(gofmt -s -l . || true)
          if [ -n "$fmtout" ]; then
            echo "gofmt differences in:"
            echo "$fmtout"
            exit 1
          fi

      - name: Staticcheck
        uses: dominikh/staticcheck-action@v1
        with:
          version: "latest"

      - name: govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: "1.23"
          args: ./...

      - name: Secrets scan (gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          args: --no-banner --redact

      - name: Secure build (sandboxed)
        run: bash ./build-sandbox.sh

      - name: No-JS regression guard
        run: bash ./.scripts/nojs-guard.sh dist

      - name: Link checker
        run: bash ./scripts/linkcheck.sh dist

      - name: Upload built site (PR previews etc.)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: site-dist
          path: dist