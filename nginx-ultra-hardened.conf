server {
    listen 443 ssl http2;
    server_name example.com;
    root /var/www/blog;

    # TLS – assume certs already provisioned (e.g., via certbot or origin certs)
    ssl_certificate     /etc/ssl/private/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;
    ssl_protocols TLSv1.3;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_stapling on; ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;

    add_header Content-Security-Policy "default-src 'none'; base-uri 'none'; form-action 'none'; frame-ancestors 'none'" always;
    add_header Referrer-Policy "no-referrer" always;
    add_header Permissions-Policy "accelerometer=(), battery=(), camera=(), display-capture=(), geolocation=(), gyroscope=(), microphone=(), payment=(), usb=()" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Embedder-Policy "require-corp" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    index index.html;
    autoindex off;
    charset utf-8;

    # Cache hardening (immutable static)
    location ~* \.(css|svg|jpg|jpeg|png|ico|webp|gif|woff2?)$ {
        expires 365d;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # HTML – revalidate frequently but no tracking
    location ~* \.(html|xml|rss)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        try_files $uri =404;
    }

    # Only allow safe methods
    limit_except GET HEAD { deny all; }

    # Tight timeouts / body size for static
    client_max_body_size 1k;
    keepalive_timeout 10s;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    access_log /var/log/nginx/secureblog_access.log;
    error_log  /var/log/nginx/secureblog_error.log warn;
}