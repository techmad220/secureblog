# Hardened nginx configuration with plugin-based security
# Run with minimal privileges: www-data user

user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # Basic security settings
    server_tokens off;
    more_clear_headers Server;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security limits
    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    
    # Timeouts
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 5 5;
    send_timeout 10;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Logging with privacy
    log_format privacy '$remote_addr - - [$time_local] "$request" '
                      '$status $body_bytes_sent "-" "-" '
                      '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log privacy buffer=32k flush=5s;
    
    # Gzip compression (safe for static content)
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Include plugin configurations
    include /etc/nginx/plugins/*.conf;
    
    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name secureblog.com;
        
        # Redirect to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name secureblog.com;
        
        # Root directory (read-only mount recommended)
        root /var/www/secureblog/dist;
        index index.html;
        
        # SSL configuration (TLS 1.3 only)
        ssl_certificate /etc/letsencrypt/live/secureblog.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/secureblog.com/privkey.pem;
        ssl_protocols TLSv1.3;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
        ssl_prefer_server_ciphers off;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/secureblog.com/chain.pem;
        
        # DNS resolver for OCSP stapling
        resolver 1.1.1.1 1.0.0.1 valid=300s;
        resolver_timeout 5s;
        
        # Security headers (plugin-based)
        include /etc/nginx/security-headers.conf;
        
        # Only allow GET and HEAD methods
        limit_except GET HEAD {
            deny all;
        }
        
        # Apply rate limiting
        limit_req zone=general burst=20 nodelay;
        limit_conn addr 10;
        
        # Static assets with immutable caching
        location ~* \.(css|svg|jpg|jpeg|png|webp|ico|woff|woff2)$ {
            expires 365d;
            add_header Cache-Control "public, immutable";
            limit_req zone=static burst=50 nodelay;
            
            # Reapply security headers for static assets
            include /etc/nginx/security-headers.conf;
        }
        
        # JavaScript files (if absolutely needed)
        location ~* \.js$ {
            # Deny by default - remove this if JS is needed
            return 404;
        }
        
        # HTML files
        location / {
            try_files $uri $uri/ $uri.html /index.html;
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            
            # Reapply security headers
            include /etc/nginx/security-headers.conf;
        }
        
        # Integrity manifest endpoint
        location = /integrity-manifest.json {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }
        
        # Block access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            internal;
        }
        
        location = /50x.html {
            internal;
        }
    }
}